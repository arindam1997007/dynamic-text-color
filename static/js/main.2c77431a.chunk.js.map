{"version":3,"sources":["components/header.jsx","components/footer.jsx","components/body.jsx","App.js","reportWebVitals.js","index.js"],"names":["Headers","state","quotes","randomQuote","imageSrc","imageHash","Date","now","randValue","Math","floor","random","this","length","interval","setInterval","setState","clearInterval","quote","className","src","alt","Component","Footer","width","height","title","frameborder","allow","allowfullscreen","Body","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAEMA,E,4MACJC,MAAQ,CACNC,OAAQ,CACN,gEACA,kKACA,sLACA,wGACA,6DACA,gFACA,+DACA,gHACA,iCAEFC,YAAa,EACbC,SAAU,6BACVC,UAAWC,KAAKC,O,uDAGlB,WAAqB,IAAD,OACZC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWC,KAAKX,MAAMC,OAAOW,QAG/DD,KAAKE,SAAWC,aACd,kBAAM,EAAKC,SAAS,CAAEb,YAAaK,EAAWH,UAAWC,KAAKC,UAC9D,O,kCAIJ,WAEEU,cAAcL,KAAKE,Y,oBAErB,WACE,MAAqDF,KAAKX,MAAlDC,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,UACpBa,EAAQhB,EADd,EAAqCC,aAErC,OACE,sBAAKgB,UAAU,OAAf,UACE,qBAEEC,IAAG,UAAKhB,EAAL,YAAiBC,GACpBgB,IAAI,iBAFCf,KAAKC,OAIZ,mBAAGY,UAAU,UAAb,SAAwBD,W,GA1CVI,aAgDPtB,IChDTuB,G,kKACJ,WACE,OACE,wBACEC,MAAM,MACNC,OAAO,MACPL,IAAI,4CACJM,MAAM,uBACNC,YAAY,IACZC,MAAM,2FACNC,iBAAe,EACfV,UAAU,e,GAXGG,cAiBNC,ICjBTO,E,4JACJ,WACE,OACE,mBAAGX,UAAU,iBAAb,gxD,GAHaG,aAmCJQ,ICrBAC,MAVf,WACE,OACE,sBAAKZ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2c77431a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Headers extends Component {\r\n  state = {\r\n    quotes: [\r\n      \"The anger of a person who is strong can always bide its time.\",\r\n      \"A bad manner spoils everything even reason and justice a good one supplies everything gilds a No sweetens a truth and adds a touch of beauty to old age itself.\",\r\n      \"Don't get me wrong - I've gone to a club. But I'd much rather be with my close friends at home or a concert or on a trip. I'll go dancing with my grandma. She likes to cut a rug!.\",\r\n      \"I've got two brothers and two sisters, so there's five of us and we're all very close, which is cool.\",\r\n      \"The only way to get rid of a temptation is to yield to it.\",\r\n      \"The natural effect of sorrow over the dead is to refine and elevate the mind.\",\r\n      \"I have such trust complexes. I'm close to, like, two people.\",\r\n      \"How wrong it is for a woman to expect the man to build the world she wants, rather than to create it herself.\",\r\n      \"Facts are the enemy of truth.\",\r\n    ],\r\n    randomQuote: 0,\r\n    imageSrc: \"https://picsum.photos/1200\",\r\n    imageHash: Date.now(), // Otherwise image is not reloaded, due to cache\r\n  };\r\n\r\n  componentDidMount() {\r\n    const randValue = Math.floor(Math.random() * this.state.quotes.length);\r\n\r\n    // Re rendering the component every 10 seconds, for a new image and quote to load\r\n    this.interval = setInterval(\r\n      () => this.setState({ randomQuote: randValue, imageHash: Date.now() }),\r\n      10000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Need to clear the setInterval after component is unmounted, otherwise might lead to memory leak\r\n    clearInterval(this.interval);\r\n  }\r\n  render() {\r\n    const { quotes, imageSrc, imageHash, randomQuote } = this.state;\r\n    const quote = quotes[randomQuote];\r\n    return (\r\n      <div className=\"crop\">\r\n        <img\r\n          key={Date.now()}\r\n          src={`${imageSrc}?${imageHash}`}\r\n          alt=\"Random images\"\r\n        />\r\n        <p className=\"mid-pic\">{quote}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Headers;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <iframe\r\n        width=\"560\"\r\n        height=\"315\"\r\n        src=\"https://www.youtube.com/embed/bOsLf8Z5v50\"\r\n        title=\"YouTube video player\"\r\n        frameborder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowfullscreen\r\n        className=\"footer\"\r\n      ></iframe>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Body extends Component {\r\n  render() {\r\n    return (\r\n      <p className=\"body-paragraph\">\r\n        Hello everyone! The best way to learn something is by doing. So, let’s\r\n        build a simple Blog app using React to understand how things work. We\r\n        won’t be making a very feature-rich blogging website with cool designs\r\n        and all. Instead, it would be simple — to serve the purpose of learning.\r\n        It would be a simple blog website with very few functionalities,\r\n        enabling you to learn better. The features we are going to build into\r\n        this blog are:- Fetching blogs from a local JSON server and displaying\r\n        the blogs in list form. Fetching details about individual blogs and\r\n        displaying them. Adding new blogs. Deleting blogs. It would be pure\r\n        React, and we will not be using any backend server for this blogging\r\n        website. So, the changes we make, i.e. the blogs we delete or add, will\r\n        reset once the page is refreshed. So, it won’t be saving any data on any\r\n        server. This article series is aimed at beginners currently, so we would\r\n        go into all the things In detail so that you can understand how things\r\n        work and will be able to implement more features into it. In the initial\r\n        phase of this tutorial series, we will only use React with no backend or\r\n        cloud to store any data. It all gets reset once we refresh the page.\r\n        But, later on, I plan to add a backend to this React project to make it\r\n        full-stack. We will use Express, Node.js, and MongoDB to build the\r\n        backend for this application and then connect the front-end and\r\n        back-end. Furthermore, if the article series gets a good response, I\r\n        would add some more features into the series with more parts, including\r\n        authentication and some other features to make it more practical. But we\r\n        keep these things for a later date and may or may not be added. So,\r\n        let’s focus on the initial phase for now, which is primarily aimed at\r\n        beginners.\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import Headers from './components/header';\nimport './App.css';\nimport Footer from './components/footer';\nimport Body from './components/body';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Headers />\n      <Body / >\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}